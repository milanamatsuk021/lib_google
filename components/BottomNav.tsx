import React from 'react';
import { View } from '../types';

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç BottomNav.
 * –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –Ω–∏–∂–Ω—é—é –ø–∞–Ω–µ–ª—å –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –º–µ–∂–¥—É –æ—Å–Ω–æ–≤–Ω—ã–º–∏ —ç–∫—Ä–∞–Ω–∞–º–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
 * @param {object} props - –°–≤–æ–π—Å—Ç–≤–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞.
 * @param {View} props.activeView - –¢–µ–∫—É—â–∏–π –∞–∫—Ç–∏–≤–Ω—ã–π —ç–∫—Ä–∞–Ω.
 * @param {(view: View) => void} props.setView - –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–æ–≤–æ–≥–æ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —ç–∫—Ä–∞–Ω–∞.
 * @returns {React.FC} JSX-—ç–ª–µ–º–µ–Ω—Ç –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–æ–π –ø–∞–Ω–µ–ª–∏.
 */
export const BottomNav: React.FC<{
  activeView: View;
  setView: (view: View) => void;
}> = ({ activeView, setView }) => {
  /**
   * –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏.
   * @param {object} props - –°–≤–æ–π—Å—Ç–≤–∞ —ç–ª–µ–º–µ–Ω—Ç–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏.
   * @returns {React.FC} JSX-—ç–ª–µ–º–µ–Ω—Ç –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏.
   */
  const NavItem: React.FC<{
    emoji: string;
    label: string;
    isActive: boolean;
    onClick: () => void;
  }> = ({ emoji, label, isActive, onClick }) => (
    <button onClick={onClick} className="flex flex-col items-center justify-center w-full pt-2 pb-1 text-sm transition-colors duration-200">
      <span className={`text-2xl mb-1 transition-transform duration-200 ${isActive ? 'scale-110' : 'opacity-70'}`}>{emoji}</span>
      <span className={`transition-opacity ${isActive ? 'text-blue-500 font-semibold' : 'text-gray-500'}`}>{label}</span>
    </button>
  );

  const navItems = [
    { view: View.LIBRARY, emoji: 'üìö', label: '–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞' },
    { view: View.SEARCH, emoji: 'üîç', label: '–ü–æ–∏—Å–∫' },
    { view: View.RECOMMENDATIONS, emoji: '‚ú®', label: '–î–ª—è –í–∞—Å' },
    { view: View.WISHLIST, emoji: '‚ù§Ô∏è', label: '–ñ–µ–ª–∞–Ω–∏—è' },
    { view: View.COLLECTION, emoji: 'üìã', label: '–ö–æ–ª–ª–µ–∫—Ü–∏—è' },
  ];

  return (
    <div className="fixed bottom-0 left-0 right-0 h-16 bg-white border-t border-gray-200 shadow-[0_-2px_5px_rgba(0,0,0,0.05)] flex justify-around z-20">
      {navItems.map((item) => (
        <NavItem
          key={item.view}
          emoji={item.emoji}
          label={item.label}
          isActive={activeView === item.view}
          onClick={() => setView(item.view)}
        />
      ))}
    </div>
  );
};